{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","page","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setPage","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","console","log","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ca56812.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n\r\n    return (\r\n        <button onClick={onClick}\r\n        style={{backgroundColor: color}} \r\n        className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text : PropTypes.string,\r\n    color : PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Header = ({ title , onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button \r\n            color = {showAdd? 'red':'Green'} text = {showAdd? 'Close':'Add'} \r\n            onClick={onAdd}/>}\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n// Default prop when nothing is passed to the header\r\nHeader.defaultProps = {\r\n    title: 'Book Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headStyle ={ \r\n//     color:'white', \r\n//     backgroundColor:'green'\r\n// }\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color:'red', cursor:'pointer'}}\r\n            onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>Author: {task.day}</p>\r\n            <p>Length: {task.page}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nconst Tasks = ({ tasks, onDelete, onToggle}) => {\r\n\r\n    \r\n    return (\r\n        // setTasks([...Tasks, {new}])\r\n        <>\r\n        {tasks.map((task, index) => (\r\n            <Task key={index}\r\n            task={task}\r\n            onDelete={onDelete}\r\n            onToggle={onToggle}/>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [page, setPage] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add text')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, page, reminder})\r\n\r\n        //Clearing the form\r\n        setText('')\r\n        setDay('')\r\n        setPage('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className = 'form-control'>\r\n                <label>Book</label>\r\n                <input type='text' placeholder='Book Name' value = {text} onChange={(e) => setText(e.target.value)}/>\r\n\r\n            </div>\r\n\r\n            <div className = 'form-control'>\r\n                <label>Author</label>\r\n                <input type='text' placeholder='Authors Name' value = {day} onChange={(e) => setDay(e.target.value)}/>\r\n\r\n            </div>\r\n\r\n            <div className = 'form-control'>\r\n                <label>Pages</label>\r\n                <input type='text' placeholder='Length of the book' value = {page} onChange={(e) => setPage(e.target.value)}/>\r\n\r\n            </div>\r\n\r\n            <div className = 'form-control form-control-check'>\r\n                <label>Read</label>\r\n                <input type='checkbox' checked={reminder} value = {reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n\r\n                <input type='submit' value='Save Book'\r\n                 className='btn btn-block'/>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to = '/about'> About </Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { Link } from 'react-router-dom'\r\n\r\nimport React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h3>Yash Nagle &copy;</h3>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\nfunction App() {\n  const[showAddTask, setShowAddTask]=useState(false)\n\n\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  //Fetch Data\n  const fetchTasks = async() => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    \n\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async(id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    \n\n    return data\n  }\n\n//Add Task\n\nconst addTask = async (task) =>{\n\n  const res = await fetch (`http://localhost:5000/tasks`, {\n    method:'POST',\n  headers: {\n    'Content-type': 'application/json',\n  },\n  body: JSON.stringify(task),\n  }\n  )\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n\n  // const id = Math.floor(Math.random() * 1000000) + 1\n\n  // console.log(id)\n\n  // const newTask = {id, ...task, } //New task has been created\n  // setTasks([...tasks, newTask])\\\n  console.log(tasks)\n}\n\n//Delete Task\nconst deleteTask = async (id) =>{\n\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'DELETE'\n  })\n\n\n\n\n  setTasks(tasks.filter((task) => {\n    return task.id !== id\n  }))\n\n  console.log(tasks)\n}\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n\n\n\n\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task))\n}\n\n  return (\n    <Router>\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {/* showing addTask if showAddTask is true  */}\n      \n\n      <Route path='/' exact render={(props) => (\n        <>\n\n          {showAddTask && <AddTask onAdd ={addTask}/>} \n          {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} \n            onToggle={toggleReminder}/> : 'No Books read'}\n\n        </>\n      )}/>\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}